TITLE:: DWGFlute
summary:: Reimplementation of STK flute model.
categories:: UGens>PhysicalModels


Description::

Digital wave guide physical model of a Flute instrument.


Classmethods::

method::ar

argument::freq
Sound frequency.

argument::pm
Mouth pressure.

argument::endr
End reflection coefficient.

argument::jetr
Jet reflection coefficient.

argument::jetRa
Jet delay as ratio to air column delay.

argument::gate
Releases synth when value changes from >0 to 0.

argument::release
Release time in seconds.


Examples::

code::
//Define flute synthdef
(

~nbuf = 2048*4;
SynthDef(\reverb,{
    |out = 0, len = 2000, roomsize = #[6.2,8,2.7], receiver = #[3,3,1.2], b = 0.74, hw = 0.4, n = 3, revl = 0.3, bypass = 0, dist=1,angle=0.2|
    var in, bufL, bufR, trig, sigL, sigR, early, sig;
	var omangle = angle*pi*0.5;
	var source = [receiver[0] + (omangle.sin*dist), receiver[1] + (omangle.cos*dist), receiver[2]];
	in = Mix(In.ar(out,2))*0.5;
    bufL = LocalBuf(~nbuf);
    bufR = LocalBuf(~nbuf);
    trig = EarlyRefGen.kr(bufL, bufR, source, receiver, roomsize, hw, b.neg, n);
    sigL = PartConvT.ar(in, 2048, bufL, trig);
    sigR = PartConvT.ar(in, 2048, bufR, trig);
    early = [sigL, sigR];
    sig = DWGReverb3Band.ar(Mix(early) * 0.5, len) * revl + early;
    sig = Select.ar(bypass, [sig, in]);
    ReplaceOut.ar(out, sig);
}).add;

SynthDef(\help_flute, { |out=0,freq=100,att=0.01,amp=0.5,endr= 0.5, jetr= 0.24,jetRa=0.33, gate= 1, release= 0.01,noisegain=12, pan=0|
	var vib,env,signal;
	vib = SinOsc.kr(4,0,0.003,1);
	env = EnvGen.ar(Env.asr(att,1,0.2,1),gate)*(1.1 + (amp*0.2)) *(vib+(0.001*noisegain*WhiteNoise.ar()));
	signal = DWGFlute.ar(freq, env,endr,jetr,jetRa, gate,release);
	signal = HPF.ar(LPF.ar(signal,6000),200);
	Out.ar(out,Pan2.ar(signal*0.2*amp,0));
}).add;
)

//Use it.
(
a = Pbind(
    \instrument, \help_flute,
    \dur , 0.25,
	\noisegain , Pseq([Pseq([10], 6),36, 10,10,Pseq([1], 3)],inf),
    \degree, Pseq([1,5,7+3], inf),
    \amp , Pseq([0.9,0.7,0.5],inf),
);

b = Pfx(a, \reverb);

b.play;
)
::
